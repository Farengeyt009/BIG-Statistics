import React, { useState, useEffect, useMemo } from 'react';
import { useTranslation } from 'react-i18next';
import { DayAssignmentModalProps, DayAssignment } from './types';
import { generateId, calculateStatisticsFromApiData } from './mockData';
import { 
  fetchAssignWorkSchedulesData, 
  transformApiDataToWorkCenters, 
  getUniqueWorkshops,
  groupWorkCentersByWorkshop,
  AssignWorkSchedulesData,
  transformTable2ToWorkSchedules
} from './api';

import WorkshopGroup from './WorkshopGroup';
import DayStatisticsPanel from './DayStatisticsPanel';

const DayAssignmentModal: React.FC<DayAssignmentModalProps> = ({
  isOpen,
  onClose,
  selectedDate,
  assignments,
  onSave,
  productionData = []
}) => {
  const { t } = useTranslation('production');
  const [localAssignments, setLocalAssignments] = useState<DayAssignment[]>(assignments);
  const [hasChanges, setHasChanges] = useState(false);
  
  // –°–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è API –¥–∞–Ω–Ω—ã—Ö
  const [apiData, setApiData] = useState<AssignWorkSchedulesData | null>(null);
  const [loading, setLoading] = useState(false);
  const [error, setError] = useState<string | null>(null);
  
  // –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–π —è–∑—ã–∫ –∏–∑ i18n
  const { i18n } = useTranslation();
  const currentLanguage = i18n.language || 'en';

  // –õ–æ–∫–∞–ª—å–Ω–æ–µ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–∞—Ç—ã –≤ YYYY-MM-DD –±–µ–∑ —Å–º–µ—â–µ–Ω–∏—è —á–∞—Å–æ–≤–æ–≥–æ –ø–æ—è—Å–∞
  const toYmdLocal = (d: Date): string => {
    const y = d.getFullYear();
    const m = String(d.getMonth() + 1).padStart(2, '0');
    const day = String(d.getDate()).padStart(2, '0');
    return `${y}-${m}-${day}`;
  };

  // –§—É–Ω–∫—Ü–∏—è –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö –∏–∑ API
  const loadApiData = async (date: Date) => {
    if (!isOpen) return;
    
    console.log('üîç –ù–∞—á–∏–Ω–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É API –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –¥–∞—Ç—ã:', date);
    setLoading(true);
    setError(null);
    
    try {
      const dateString = toYmdLocal(date); // YYYY-MM-DD (local)
      console.log('üîç –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è –¥–∞—Ç—ã:', dateString);
      
      const data = await fetchAssignWorkSchedulesData(dateString);
      console.log('üîç –ü–æ–ª—É—á–µ–Ω—ã –¥–∞–Ω–Ω—ã–µ –∏–∑ API:', data);
      console.log('üîç table1 —Å–æ–¥–µ—Ä–∂–∏—Ç –∑–∞–ø–∏—Å–µ–π:', data?.table1?.length || 0);
      
      if (data?.table1) {
        console.log('üîç –ü–µ—Ä–≤—ã–µ –∑–∞–ø–∏—Å–∏ table1:', data.table1.slice(0, 3));
      }
      
      setApiData(data);
    } catch (err) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ API –¥–∞–Ω–Ω—ã—Ö:', err);
      setError(err instanceof Error ? err.message : 'Failed to load data');
    } finally {
      setLoading(false);
    }
  };

  // –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø—Ä–∏ –æ—Ç–∫—Ä—ã—Ç–∏–∏ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
  useEffect(() => {
    if (isOpen && selectedDate) {
      // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø—Ä–∏ –æ—Ç–∫—Ä—ã—Ç–∏–∏
      setApiData(null);
      setLocalAssignments([]);
      setHasChanges(false);
      setError(null);
      
      loadApiData(selectedDate);
    }
  }, [isOpen, selectedDate]);

     // –°–æ–∑–¥–∞–µ–º –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è —Ç–æ–ª—å–∫–æ –¥–ª—è –†–¶ —Å –¥–∞–Ω–Ω—ã–º–∏ –æ –≤—ã–ø—É—Å–∫–µ
   useEffect(() => {
     console.log('üîç useEffect —Å—Ä–∞–±–æ—Ç–∞–ª - apiData:', !!apiData, 'localAssignments.length:', localAssignments.length);
     
     if (!apiData || localAssignments.length > 0) {
       console.log('üîç –í—ã—Ö–æ–¥–∏–º –∏–∑ useEffect - –Ω–µ—Ç apiData –∏–ª–∏ —É–∂–µ –µ—Å—Ç—å –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è');
       return;
     }
     
     console.log('üîç –°–æ–∑–¥–∞–µ–º –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è —Ç–æ–ª—å–∫–æ –¥–ª—è –†–¶ —Å –¥–∞–Ω–Ω—ã–º–∏ –æ –≤—ã–ø—É—Å–∫–µ');
    console.log('üîç apiData.table1:', apiData.table1);
    console.log('üîç apiData.table1.length:', apiData.table1?.length || 0);
    
    const dateString = selectedDate!.toISOString().split('T')[0];
    const newAssignments: DayAssignment[] = [];
    
    if (!apiData.table1 || apiData.table1.length === 0) {
      console.log('‚ùå apiData.table1 –ø—É—Å—Ç–∞ –∏–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç!');
      return;
    }
    
    apiData.table1.forEach((item, index) => {
      console.log(`üîç –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∑–∞–ø–∏—Å—å ${index}:`, item);
      
      const planQty = Number(item.Plan_QTY) || 0;
      const factQty = Number(item.FACT_QTY) || 0;
      const planTime = Number(item.Plan_TIME) || 0;
      const factTime = Number(item.FACT_TIME) || 0;
      const shiftTime = Number(item.Shift_Time) || 0;
      const timeLoss = Number(item.Time_Loss) || 0;
      const people = Number(item.People) || 0;
      
      console.log(`üîç –†–¶ ${item.WorkCenter_CustomWS}:`, {
        planQty, factQty, planTime, factTime, shiftTime, timeLoss, people
      });
      
             // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –¥–∞–Ω–Ω—ã–µ –æ –≤—ã–ø—É—Å–∫–µ
       const hasProductionData = planQty > 0 || factQty > 0 || planTime > 0 || factTime > 0;
       console.log(`üîç –†–¶ ${item.WorkCenter_CustomWS} –∏–º–µ–µ—Ç –¥–∞–Ω–Ω—ã–µ –æ –≤—ã–ø—É—Å–∫–µ:`, hasProductionData);
       
       // –°–æ–∑–¥–∞–µ–º –Ω–∞–∑–Ω–∞—á–µ–Ω–∏–µ –¢–û–õ–¨–ö–û –¥–ª—è –†–¶ —Å –¥–∞–Ω–Ω—ã–º–∏ –æ –≤—ã–ø—É—Å–∫–µ
       if (hasProductionData) {
         const assignment: DayAssignment = {
           id: generateId(),
           date: dateString,
           workCenterId: `${item.WorkShop_CustomWS}_${item.WorkCenter_CustomWS}`, // –ò—Å–ø–æ–ª—å–∑—É–µ–º —É–Ω–∏–∫–∞–ª—å–Ω—ã–π ID –∫–∞–∫ –≤ workCenters
           scheduleId: '', // –ü—É—Å—Ç–æ–π, –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤—ã–±–µ—Ä–µ—Ç
           peopleCount: people,
           notes: '',
           production: {
             planQty: planQty,
             factQty: factQty,
             completionPercentageQty: planQty > 0 ? ((factQty / planQty) * 100) : 0,
             planHours: planTime,
             factHours: factTime,
             completionPercentageHours: planTime > 0 ? ((factTime / planTime) * 100) : 0
           },
           shiftTime: shiftTime,
           timeLoss: timeLoss,
           different: 0
         };
         newAssignments.push(assignment);
         console.log(`üîç –°–æ–∑–¥–∞–Ω–æ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏–µ –¥–ª—è ${item.WorkCenter_CustomWS}:`, assignment);
       } else {
         console.log(`üîç –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –†–¶ ${item.WorkCenter_CustomWS} - –Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö –æ –≤—ã–ø—É—Å–∫–µ`);
       }
    });
    
    console.log('üîç –í—Å–µ–≥–æ —Å–æ–∑–¥–∞–Ω–æ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏–π:', newAssignments.length);
    
    if (newAssignments.length > 0) {
      console.log('üîç –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–µ:', newAssignments);
      setLocalAssignments(newAssignments);
    } else {
      console.log('‚ùå –ù–µ —Å–æ–∑–¥–∞–Ω–æ –Ω–∏ –æ–¥–Ω–æ–≥–æ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è!');
    }
  }, [apiData, selectedDate]);



  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —á–∏—Å–µ–ª —Å —Ä–æ—Å—Å–∏–π—Å–∫–∏–º —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª–µ–º
  const formatNumber = (value: number): string => {
    return Math.round(value).toLocaleString('ru-RU');
  };



  // –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–∞—Ç—ã –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
  const formatDate = (date: Date) => {
    return date.toLocaleDateString('ru-RU', {
      weekday: 'long',
      year: 'numeric',
      month: 'long',
      day: 'numeric'
    });
  };

  // –ü–æ–ª—É—á–µ–Ω–∏–µ —Ä–∞–±–æ—á–∏—Ö —Ü–µ–Ω—Ç—Ä–æ–≤ –∏–∑ API –¥–∞–Ω–Ω—ã—Ö
  const workCenters = useMemo(() => {
    if (!apiData) return [];
    return transformApiDataToWorkCenters(apiData, currentLanguage as 'en' | 'zh');
  }, [apiData, currentLanguage]);

  // –ì—Ä—É–ø–ø–∏—Ä–æ–≤–∫–∞ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏–π –ø–æ —Ü–µ—Ö–∞–º
  const workshopGroups = useMemo(() => {
    console.log('üîç –ì—Ä—É–ø–ø–∏—Ä—É–µ–º –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è - localAssignments:', localAssignments);
    console.log('üîç –ì—Ä—É–ø–ø–∏—Ä—É–µ–º –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è - workCenters:', workCenters);
    
    const groups: Record<string, DayAssignment[]> = {};
    
         localAssignments.forEach(assignment => {
       const workCenter = workCenters.find(wc => wc.id === assignment.workCenterId);
       console.log(`üîç –ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ ${assignment.workCenterId} -> workCenter:`, workCenter);
       console.log(`üîç –î–æ—Å—Ç—É–ø–Ω—ã–µ workCenter IDs:`, workCenters.map(wc => wc.id));
      
      if (workCenter) {
        if (!groups[workCenter.workshop]) {
          groups[workCenter.workshop] = [];
        }
        groups[workCenter.workshop].push(assignment);
      } else if (!assignment.workCenterId) {
        // –ï—Å–ª–∏ —É –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è –Ω–µ—Ç workCenterId, –¥–æ–±–∞–≤–ª—è–µ–º –µ–≥–æ –≤ –≥—Ä—É–ø–ø—É "–ù–µ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–µ"
        if (!groups['undefined']) {
          groups['undefined'] = [];
        }
        groups['undefined'].push(assignment);
      }
    });
    
    console.log('üîç –†–µ–∑—É–ª—å—Ç–∞—Ç –≥—Ä—É–ø–ø–∏—Ä–æ–≤–∫–∏:', groups);
    return groups;
  }, [localAssignments, workCenters]);

  // –ü–æ–ª—É—á–µ–Ω–∏–µ —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö —Ü–µ—Ö–æ–≤
  const uniqueWorkshops = useMemo(() => {
    if (!apiData) return [];
    const workshops = getUniqueWorkshops(apiData, currentLanguage as 'en' | 'zh');
    // –î–æ–±–∞–≤–ª—è–µ–º "undefined" –≥—Ä—É–ø–ø—É, –µ—Å–ª–∏ –µ—Å—Ç—å –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è –±–µ–∑ workCenterId
    if (localAssignments.some(a => !a.workCenterId)) {
      workshops.push('undefined');
    }
    return workshops;
  }, [apiData, currentLanguage, localAssignments]);



  // –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è –≤ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π —Ü–µ—Ö
  const handleAddAssignment = (workshop: string) => {
    // –ù–∞—Ö–æ–¥–∏–º –ø–µ—Ä–≤—ã–π –¥–æ—Å—Ç—É–ø–Ω—ã–π –†–¶ –¥–ª—è —ç—Ç–æ–≥–æ —Ü–µ—Ö–∞
    const availableWorkCenter = workCenters.find(wc => wc.workshop === workshop);
    
    if (!availableWorkCenter) {
      console.error(`No work centers found for workshop: ${workshop}`);
      return;
    }

    const newAssignment: DayAssignment = {
      id: generateId(),
      date: selectedDate ? toYmdLocal(selectedDate) : '',
      workCenterId: availableWorkCenter.id, // –ò—Å–ø–æ–ª—å–∑—É–µ–º —É–Ω–∏–∫–∞–ª—å–Ω—ã–π ID
      scheduleId: '',
      peopleCount: 0,
      notes: ''
    };
    
    setLocalAssignments([...localAssignments, newAssignment]);
    setHasChanges(true);
  };

  // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è
  const handleUpdateAssignment = (updatedAssignment: DayAssignment) => {
    const updated = localAssignments.map(assignment => 
      assignment.id === updatedAssignment.id ? updatedAssignment : assignment
    );
    setLocalAssignments(updated);
    setHasChanges(true);
  };

  // –£–¥–∞–ª–µ–Ω–∏–µ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è
  const handleRemoveAssignment = (assignmentId: string) => {
    const filtered = localAssignments.filter(assignment => assignment.id !== assignmentId);
    setLocalAssignments(filtered);
    setHasChanges(true);
  };

  // –û—Ç–º–µ–Ω–∞ –∏–∑–º–µ–Ω–µ–Ω–∏–π
  const handleCancel = () => {
    setLocalAssignments(assignments);
    setHasChanges(false);
    setApiData(null); // –°–±—Ä–∞—Å—ã–≤–∞–µ–º API –¥–∞–Ω–Ω—ã–µ
    setLocalAssignments([]); // –û—á–∏—â–∞–µ–º –ª–æ–∫–∞–ª—å–Ω—ã–µ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è
    onClose();
  };

  // –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏–π
  const handleSave = async () => {
    try {
      // –í–∞–ª–∏–¥–∞—Ü–∏—è –≤—Å–µ—Ö –Ω–∞–∑–Ω–∞—á–µ–Ω–∏–π
      const validAssignments = localAssignments.filter(assignment => {
        // –î–ª—è –Ω–∞–∑–Ω–∞—á–µ–Ω–∏–π —Å –¥–∞–Ω–Ω—ã–º–∏ –æ –≤—ã–ø—É—Å–∫–µ –ø—Ä–æ–≤–µ—Ä—è–µ–º —Ç–æ–ª—å–∫–æ scheduleId
        if (assignment.production && 
            (assignment.production.planQty > 0 || 
             assignment.production.factQty > 0 || 
             assignment.production.planHours > 0 || 
             assignment.production.factHours > 0)) {
          return assignment.scheduleId;
        }
        
        // –î–ª—è –æ–±—ã—á–Ω—ã—Ö –Ω–∞–∑–Ω–∞—á–µ–Ω–∏–π –ø—Ä–æ–≤–µ—Ä—è–µ–º workCenterId –∏ scheduleId
        return assignment.workCenterId && assignment.scheduleId;
      });

      // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏–µ –†–¶ (—Ç–æ–ª—å–∫–æ –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º—ã—Ö –Ω–∞–∑–Ω–∞—á–µ–Ω–∏–π)
      const editableAssignments = validAssignments.filter(assignment => {
        if (assignment.production && 
            (assignment.production.planQty > 0 || 
             assignment.production.factQty > 0 || 
             assignment.production.planHours > 0 || 
             assignment.production.factHours > 0)) {
          return false; // –ò—Å–∫–ª—é—á–∞–µ–º –∏–∑ –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏—è
        }
        return true;
      });
      
      const workCenterIds = editableAssignments.map(a => a.workCenterId);
      const hasDuplicates = workCenterIds.length !== new Set(workCenterIds).size;

      if (hasDuplicates) {
        alert(t('assignmentValidation.duplicateAssignment'));
        return;
      }

             // –ü—Ä–æ—Å—Ç–æ —Å–æ—Ö—Ä–∞–Ω—è–µ–º –ª–æ–∫–∞–ª—å–Ω–æ (–±–µ–∑ –ë–î)
       console.log('üîç –°–æ—Ö—Ä–∞–Ω—è–µ–º –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è –ª–æ–∫–∞–ª—å–Ω–æ:', validAssignments);
       onSave(validAssignments);
       setHasChanges(false);
       setApiData(null); // –°–±—Ä–∞—Å—ã–≤–∞–µ–º API –¥–∞–Ω–Ω—ã–µ
       setLocalAssignments([]); // –û—á–∏—â–∞–µ–º –ª–æ–∫–∞–ª—å–Ω—ã–µ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è
       alert(`–°–æ—Ö—Ä–∞–Ω–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ! –û–±—Ä–∞–±–æ—Ç–∞–Ω–æ ${validAssignments.length} —ç–ª–µ–º–µ–Ω—Ç–æ–≤.`);

    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏–π:', error);
      alert(`–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏: ${error instanceof Error ? error.message : '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞'}`);
    }
  };

  // –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ —É–∂–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–Ω—ã—Ö –†–¶
  const getExistingWorkCenterIds = (currentAssignmentId: string) => {
    return localAssignments
      .filter(a => {
        // –ò—Å–∫–ª—é—á–∞–µ–º —Ç–µ–∫—É—â–µ–µ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏–µ
        if (a.id === currentAssignmentId) return false;
        
        // –ò—Å–∫–ª—é—á–∞–µ–º –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è –±–µ–∑ workCenterId
        if (!a.workCenterId) return false;
        
        // –ò—Å–∫–ª—é—á–∞–µ–º –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è —Å –¥–∞–Ω–Ω—ã–º–∏ –æ –≤—ã–ø—É—Å–∫–µ (–∫–æ—Ç–æ—Ä—ã–µ –Ω–µ–ª—å–∑—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å)
        if (a.production && 
            (a.production.planQty > 0 || 
             a.production.factQty > 0 || 
             a.production.planHours > 0 || 
             a.production.factHours > 0)) {
          return false;
        }
        
        return true;
      })
      .map(a => a.workCenterId);
  };

  // –ü–æ–¥—Å—á–µ—Ç –æ–±—â–µ–≥–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –ª—é–¥–µ–π
  const totalPeople = localAssignments.reduce((sum, assignment) => sum + assignment.peopleCount, 0);

  // –ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –¥–Ω—è –∏–∑ API –¥–∞–Ω–Ω—ã—Ö
  const dayStatistics = useMemo(() => {
    if (!apiData) return null;
    return calculateStatisticsFromApiData(apiData);
  }, [apiData]);

  // –°–æ–∑–¥–∞–Ω–∏–µ workSchedules –∏–∑ table2
  const workSchedules = useMemo(() => {
    if (!apiData) return [];
    return transformTable2ToWorkSchedules(apiData);
  }, [apiData]);

  if (!isOpen || !selectedDate) return null;

  return (
    <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
      <div className="bg-white rounded-lg shadow-xl w-full max-w-[1400px] max-h-[90vh] overflow-hidden">
        {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ */}
        <div className="flex items-center justify-between p-6 border-b border-gray-200">
          <div>
            <h2 className="text-2xl font-bold text-gray-900">
              {t('assignWorkSchedules')}
            </h2>
            <p className="text-gray-600 mt-1">
              {formatDate(selectedDate)}
            </p>
          </div>
                     <button
             onClick={() => {
               setApiData(null); // –°–±—Ä–∞—Å—ã–≤–∞–µ–º API –¥–∞–Ω–Ω—ã–µ
               setLocalAssignments([]); // –û—á–∏—â–∞–µ–º –ª–æ–∫–∞–ª—å–Ω—ã–µ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è
               setHasChanges(false);
               onClose();
             }}
             className="text-gray-400 hover:text-gray-600 transition-colors"
           >
            <svg className="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M6 18L18 6M6 6l12 12" />
            </svg>
          </button>
        </div>

        {/* –ü–∞–Ω–µ–ª—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ */}
        <DayStatisticsPanel
          statistics={dayStatistics}
          assignmentsCount={localAssignments.length}
          totalPeople={totalPeople}
        />

        {/* –°–æ–¥–µ—Ä–∂–∏–º–æ–µ */}
        <div className="p-6 overflow-y-auto max-h-[50vh]">
          <div className="space-y-6">
            {/* –û—Ç–æ–±—Ä–∞–∂–∞–µ–º –≥—Ä—É–ø–ø—ã —Ü–µ—Ö–æ–≤ */}
            {loading ? (
              <div className="flex items-center justify-center py-8">
                <div className="text-gray-500">Loading...</div>
              </div>
            ) : error ? (
              <div className="flex items-center justify-center py-8">
                <div className="text-red-500">Error: {error}</div>
              </div>
            ) : (
              uniqueWorkshops.map((workshop) => (
                <WorkshopGroup
                  key={workshop}
                  workshop={workshop}
                  assignments={workshopGroups[workshop] || []}
                  workCenters={workCenters}
                  workSchedules={workSchedules}
                  onAddAssignment={handleAddAssignment}
                  onUpdateAssignment={handleUpdateAssignment}
                  onRemoveAssignment={handleRemoveAssignment}
                  getExistingWorkCenterIds={getExistingWorkCenterIds}
                />
              ))
            )}
          </div>
        </div>

        {/* –ö–Ω–æ–ø–∫–∏ –¥–µ–π—Å—Ç–≤–∏–π */}
        <div className="flex items-center justify-end space-x-3 p-6 border-t border-gray-200">
          <button
            onClick={handleCancel}
            className="px-4 py-2 text-gray-700 bg-gray-100 rounded-md hover:bg-gray-200 transition-colors"
          >
            {t('cancel')}
          </button>
          <button
            onClick={handleSave}
            disabled={!hasChanges}
            className={`px-4 py-2 text-white rounded-md transition-colors ${
              hasChanges 
                ? 'bg-blue-600 hover:bg-blue-700' 
                : 'bg-gray-400 cursor-not-allowed'
            }`}
          >
            {t('save')}
          </button>
        </div>
      </div>
    </div>
  );
};

export default DayAssignmentModal;
